{"ast":null,"code":"import axios from \"axios\";\nimport AppConfig from \"./apiConfig\";\nimport { methodType } from \"./apiEndPoints\";\nimport { clearStorage, getStorage, getUserToken, signOut } from \"../../helper/storage\";\n// import { getUserToken, signOut } from \"@/helper/storage\";\n\naxios.interceptors.response.use(response => {\n  const {\n    data\n  } = response;\n  return data;\n}, error => {\n  var _response$config, _response$config$url, _response$config2, _response$config2$url;\n  const {\n    response: {\n      data\n    },\n    response\n  } = error;\n  // write 401 case condition here\n  if ((response === null || response === void 0 ? void 0 : response.status) === 401 && !(response !== null && response !== void 0 && (_response$config = response.config) !== null && _response$config !== void 0 && (_response$config$url = _response$config.url) !== null && _response$config$url !== void 0 && _response$config$url.includes(\"login\")) && !((response === null || response === void 0 ? void 0 : (_response$config2 = response.config) === null || _response$config2 === void 0 ? void 0 : (_response$config2$url = _response$config2.url) === null || _response$config2$url === void 0 ? void 0 : _response$config2$url.search(\"change_password\")) > 0)) {\n    clearStorage();\n    return Promise.reject(error);\n  }\n  if (data) {\n    return data;\n  } else {\n    return Promise.reject(error);\n  }\n});\nexport const performRequest = async (method, url, data = {}, token = false, formData = false) => {\n  url = url.replaceAll(\"#\", \"%23\");\n  const config = {\n    method,\n    url\n  };\n  if (method === methodType.PUT || method === methodType.PATCH || method === methodType.POST || method === methodType.DELETE) {\n    config.data = data;\n  }\n  if (method === methodType.GET) {\n    config.params = data;\n  }\n  if (formData) {\n    config.headers = {\n      \"Content-Type\": \"multipart/form-data; boundary=<calculated when request is sent>\"\n    };\n  } else {\n    config.headers = {\n      \"Content-Type\": \"application/json; charset=utf-8\"\n    };\n  }\n  if (token) {\n    let key = getStorage(\"logged-in\") || null;\n    config.headers.Authorization = `Bearer ${key}`;\n  }\n  config.headers[\"timezone\"] = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  return axios(config);\n};","map":{"version":3,"names":["axios","AppConfig","methodType","clearStorage","getStorage","getUserToken","signOut","interceptors","response","use","data","error","_response$config","_response$config$url","_response$config2","_response$config2$url","status","config","url","includes","search","Promise","reject","performRequest","method","token","formData","replaceAll","PUT","PATCH","POST","DELETE","GET","params","headers","key","Authorization","Intl","DateTimeFormat","resolvedOptions","timeZone"],"sources":["/home/abc/Documents/alit-task/my-app/src/App/services/_apiConfig/apiHandler.js"],"sourcesContent":["import axios from \"axios\";\nimport AppConfig from \"./apiConfig\";\nimport { methodType } from \"./apiEndPoints\";\nimport { clearStorage, getStorage, getUserToken, signOut } from \"../../helper/storage\";\n// import { getUserToken, signOut } from \"@/helper/storage\";\n\naxios.interceptors.response.use(\n  (response) => {\n    const { data } = response;\n    return data;\n  },\n  (error) => {\n    const {\n      response: { data },\n      response,\n    } = error;\n    // write 401 case condition here\n    if (\n      response?.status === 401 &&\n      !response?.config?.url?.includes(\"login\") &&\n      !(response?.config?.url?.search(\"change_password\") > 0)\n    ) {\n      clearStorage();\n      return Promise.reject(error);\n    }\n    if (data) {\n      return data;\n    } else {\n      return Promise.reject(error);\n    }\n  }\n);\n\nexport const performRequest = async (\n  method,\n  url,\n  data = {},\n  token = false,\n  formData = false\n) => {\n  url = url.replaceAll(\"#\", \"%23\");\n  const config = {\n    method,\n    url,\n  };\n\n  if (\n    method === methodType.PUT ||\n    method === methodType.PATCH ||\n    method === methodType.POST ||\n    method === methodType.DELETE\n  ) {\n    config.data = data;\n  }\n\n  if (method === methodType.GET) {\n    config.params = data;\n  }\n\n  if (formData) {\n    config.headers = {\n      \"Content-Type\":\n        \"multipart/form-data; boundary=<calculated when request is sent>\",\n    };\n  } else {\n    config.headers = {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    };\n  }\n  if (token) {\n    let key = getStorage(\"logged-in\") || null;\n    config.headers.Authorization = `Bearer ${key}`;\n  }\n\n  config.headers[\"timezone\"] = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  return axios(config);\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,YAAY,EAAEC,UAAU,EAAEC,YAAY,EAAEC,OAAO,QAAQ,sBAAsB;AACtF;;AAEAN,KAAK,CAACO,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC5BD,QAAQ,IAAK;EACZ,MAAM;IAAEE;EAAK,CAAC,GAAGF,QAAQ;EACzB,OAAOE,IAAI;AACb,CAAC,EACAC,KAAK,IAAK;EAAA,IAAAC,gBAAA,EAAAC,oBAAA,EAAAC,iBAAA,EAAAC,qBAAA;EACT,MAAM;IACJP,QAAQ,EAAE;MAAEE;IAAK,CAAC;IAClBF;EACF,CAAC,GAAGG,KAAK;EACT;EACA,IACE,CAAAH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEQ,MAAM,MAAK,GAAG,IACxB,EAACR,QAAQ,aAARA,QAAQ,gBAAAI,gBAAA,GAARJ,QAAQ,CAAES,MAAM,cAAAL,gBAAA,gBAAAC,oBAAA,GAAhBD,gBAAA,CAAkBM,GAAG,cAAAL,oBAAA,eAArBA,oBAAA,CAAuBM,QAAQ,CAAC,OAAO,CAAC,KACzC,EAAE,CAAAX,QAAQ,aAARA,QAAQ,wBAAAM,iBAAA,GAARN,QAAQ,CAAES,MAAM,cAAAH,iBAAA,wBAAAC,qBAAA,GAAhBD,iBAAA,CAAkBI,GAAG,cAAAH,qBAAA,uBAArBA,qBAAA,CAAuBK,MAAM,CAAC,iBAAiB,CAAC,IAAG,CAAC,CAAC,EACvD;IACAjB,YAAY,CAAC,CAAC;IACd,OAAOkB,OAAO,CAACC,MAAM,CAACX,KAAK,CAAC;EAC9B;EACA,IAAID,IAAI,EAAE;IACR,OAAOA,IAAI;EACb,CAAC,MAAM;IACL,OAAOW,OAAO,CAACC,MAAM,CAACX,KAAK,CAAC;EAC9B;AACF,CACF,CAAC;AAED,OAAO,MAAMY,cAAc,GAAG,MAAAA,CAC5BC,MAAM,EACNN,GAAG,EACHR,IAAI,GAAG,CAAC,CAAC,EACTe,KAAK,GAAG,KAAK,EACbC,QAAQ,GAAG,KAAK,KACb;EACHR,GAAG,GAAGA,GAAG,CAACS,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC;EAChC,MAAMV,MAAM,GAAG;IACbO,MAAM;IACNN;EACF,CAAC;EAED,IACEM,MAAM,KAAKtB,UAAU,CAAC0B,GAAG,IACzBJ,MAAM,KAAKtB,UAAU,CAAC2B,KAAK,IAC3BL,MAAM,KAAKtB,UAAU,CAAC4B,IAAI,IAC1BN,MAAM,KAAKtB,UAAU,CAAC6B,MAAM,EAC5B;IACAd,MAAM,CAACP,IAAI,GAAGA,IAAI;EACpB;EAEA,IAAIc,MAAM,KAAKtB,UAAU,CAAC8B,GAAG,EAAE;IAC7Bf,MAAM,CAACgB,MAAM,GAAGvB,IAAI;EACtB;EAEA,IAAIgB,QAAQ,EAAE;IACZT,MAAM,CAACiB,OAAO,GAAG;MACf,cAAc,EACZ;IACJ,CAAC;EACH,CAAC,MAAM;IACLjB,MAAM,CAACiB,OAAO,GAAG;MACf,cAAc,EAAE;IAClB,CAAC;EACH;EACA,IAAIT,KAAK,EAAE;IACT,IAAIU,GAAG,GAAG/B,UAAU,CAAC,WAAW,CAAC,IAAI,IAAI;IACzCa,MAAM,CAACiB,OAAO,CAACE,aAAa,GAAG,UAAUD,GAAG,EAAE;EAChD;EAEAlB,MAAM,CAACiB,OAAO,CAAC,UAAU,CAAC,GAAGG,IAAI,CAACC,cAAc,CAAC,CAAC,CAACC,eAAe,CAAC,CAAC,CAACC,QAAQ;EAC7E,OAAOxC,KAAK,CAACiB,MAAM,CAAC;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}