{"ast":null,"code":"var _jsxFileName = \"/home/abc/Documents/alit-task/my-app/src/App/index.js\",\n  _userDetails$employee4,\n  _userDetails$employee5;\nimport React from \"react\";\nimport { createBrowserRouter, Navigate } from \"react-router-dom\";\n// import { getStorage, getUserDetails } from \"./helper/storage\";\nimport { routerList, PublicRoute, ProtectRoutes } from \"./router\";\nimport { utils } from \"./helper/utils\";\nimport { getStorage } from \"./helper/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loggedIn = getStorage('logged-in');\nconst userDetails = getUserDetails();\nconst checkIsViewPermission = () => {\n  var _userDetails$employee;\n  return Object.keys(userDetails === null || userDetails === void 0 ? void 0 : (_userDetails$employee = userDetails.employee_role) === null || _userDetails$employee === void 0 ? void 0 : _userDetails$employee.app_permissions).filter(item => {\n    var _userDetails$employee2, _userDetails$employee3;\n    return userDetails === null || userDetails === void 0 ? void 0 : (_userDetails$employee2 = userDetails.employee_role) === null || _userDetails$employee2 === void 0 ? void 0 : (_userDetails$employee3 = _userDetails$employee2.app_permissions[item]) === null || _userDetails$employee3 === void 0 ? void 0 : _userDetails$employee3.view;\n  });\n};\nconst permissions = userDetails !== null && userDetails !== void 0 && (_userDetails$employee4 = userDetails.employee_role) !== null && _userDetails$employee4 !== void 0 && _userDetails$employee4.app_permissions ? utils !== null && utils !== void 0 && utils.isObjectKeyEmpty(userDetails === null || userDetails === void 0 ? void 0 : (_userDetails$employee5 = userDetails.employee_role) === null || _userDetails$employee5 === void 0 ? void 0 : _userDetails$employee5.app_permissions) ? [\"dashboard\"] : [\"dashboard\", ...checkIsViewPermission()] : [];\nlet list = routerList.filter(item => {\n  if (item !== null && item !== void 0 && item.key && loggedIn) {\n    return (permissions === null || permissions === void 0 ? void 0 : permissions.length) > 0 ? permissions === null || permissions === void 0 ? void 0 : permissions.includes(item === null || item === void 0 ? void 0 : item.key) : true;\n  } else {\n    return true;\n  }\n}).map(route => ({\n  ...route,\n  element: route.private ? /*#__PURE__*/_jsxDEV(ProtectRoutes, {\n    children: /*#__PURE__*/_jsxDEV(route.element, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 40\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(PublicRoute, {\n    children: /*#__PURE__*/_jsxDEV(route.element, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this)\n}));\nexport const routers = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(Navigate, {\n    to: loggedIn ? '/dashboard' : \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this)\n}, ...list,\n// render public and private route\n{\n  path: \"*\",\n  element: /*#__PURE__*/_jsxDEV(Navigate, {\n    to: loggedIn ? '/dashboard' : \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this)\n}]);\nexport default routers;","map":{"version":3,"names":["React","createBrowserRouter","Navigate","routerList","PublicRoute","ProtectRoutes","utils","getStorage","jsxDEV","_jsxDEV","loggedIn","userDetails","getUserDetails","checkIsViewPermission","_userDetails$employee","Object","keys","employee_role","app_permissions","filter","item","_userDetails$employee2","_userDetails$employee3","view","permissions","_userDetails$employee4","isObjectKeyEmpty","_userDetails$employee5","list","key","length","includes","map","route","element","private","children","fileName","_jsxFileName","lineNumber","columnNumber","routers","path","to"],"sources":["/home/abc/Documents/alit-task/my-app/src/App/index.js"],"sourcesContent":["import React from \"react\";\nimport { createBrowserRouter, Navigate } from \"react-router-dom\";\n// import { getStorage, getUserDetails } from \"./helper/storage\";\nimport { routerList, PublicRoute, ProtectRoutes } from \"./router\";\nimport { utils } from \"./helper/utils\";\nimport { getStorage } from \"./helper/storage\";\n\nconst loggedIn = getStorage('logged-in')\nconst userDetails = getUserDetails()\n\nconst checkIsViewPermission = () => {\n   return Object.keys(userDetails?.employee_role?.app_permissions).filter(item => userDetails?.employee_role?.app_permissions[item]?.view)\n}\n\nconst permissions = userDetails?.employee_role?.app_permissions\n  ? utils?.isObjectKeyEmpty(userDetails?.employee_role?.app_permissions)\n    ? [\"dashboard\"]\n    : [\"dashboard\", ...checkIsViewPermission()]\n  : [];\n\n  let list = routerList.filter((item) => {\n    if (item?.key && loggedIn) {\n      return permissions?.length > 0 ? permissions?.includes(item?.key) : true;\n    } else {\n      return true;\n    }\n  }).map((route) => ({\n    ...route, element:\n        route.private ? <ProtectRoutes><route.element /></ProtectRoutes> :\n            <PublicRoute><route.element /></PublicRoute>\n}))\nexport const routers = createBrowserRouter([\n    {\n        path: \"/\",\n        element: (\n            <Navigate to={loggedIn ? '/dashboard' : \"/login\"} />\n        ),\n    },\n    ...list, // render public and private route\n    {\n        path: \"*\",\n        element: (\n            <Navigate to={loggedIn ? '/dashboard' : \"/login\"} />\n        ),\n    },\n]);\nexport default routers;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}