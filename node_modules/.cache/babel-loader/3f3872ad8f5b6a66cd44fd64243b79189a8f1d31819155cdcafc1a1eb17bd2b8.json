{"ast":null,"code":"var _jsxFileName = \"/home/abc/Documents/alit-task/my-app/src/components/common/InputField.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const InputField = props => {\n  _s();\n  const {\n    type = \"text\",\n    name,\n    error,\n    label,\n    focus,\n    labelClass,\n    error_class = \"\",\n    onChange,\n    value,\n    disabled = false,\n    placeholder = '',\n    className = \"\",\n    max = 1000,\n    onInput = () => {},\n    maxLength = 1000\n  } = props;\n  const invalid = !!(focus && error);\n  const valid = !!Boolean(focus && !error);\n  useEffect(() => {\n    const inputFields = document.querySelectorAll(\"input\");\n    inputFields.forEach(input => {\n      input.setAttribute(\"autocomplete\", \"off\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" \", label, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: disabled,\n          autoComplete: \"off\",\n          name: name,\n          type: type,\n          id: name,\n          className: \"form-control\" + className,\n          placeholder: placeholder,\n          onChange: onChange,\n          value: value,\n          max: max,\n          maxLength: maxLength,\n          onInput: onInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: error_class + \"input_drop_error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(InputField, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = InputField;\nvar _c;\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","InputField","props","_s","type","name","error","label","focus","labelClass","error_class","onChange","value","disabled","placeholder","className","max","onInput","maxLength","invalid","valid","Boolean","inputFields","document","querySelectorAll","forEach","input","setAttribute","children","fileName","_jsxFileName","lineNumber","columnNumber","autoComplete","id","_c","$RefreshReg$"],"sources":["/home/abc/Documents/alit-task/my-app/src/components/common/InputField.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nexport const InputField = (props) => {\n  const {\n    type = \"text\",\n    name,\n    error,\n    label,\n    focus,\n    labelClass,\n    error_class = \"\",\n    onChange,\n    value,\n    disabled = false,\n    placeholder = '',\n    className = \"\",\n    max = 1000,\n    onInput = () => {},\n    maxLength = 1000,\n  } = props;\n  const invalid = !!(focus && error);\n  const valid = !!Boolean(focus && !error);\n\n  useEffect(() => {\n    const inputFields = document.querySelectorAll(\"input\");\n    inputFields.forEach((input) => {\n      input.setAttribute(\"autocomplete\", \"off\");\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"relative\">\n        <label> {label} </label>\n        <div>\n          <input\n            disabled={disabled}\n            autoComplete=\"off\"\n            name={name}\n            type={type}\n            id={name}\n            className={\"form-control\" + className}\n            placeholder={placeholder}\n            onChange={onChange}\n            value={value}\n            max={max}\n            maxLength={maxLength}\n            onInput={onInput}\n          />\n        </div>\n        {error && (\n          <p className={error_class + \"input_drop_error\"}>\n            {error}\n          </p>\n        )}\n      </div>\n    </>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACnC,MAAM;IACJC,IAAI,GAAG,MAAM;IACbC,IAAI;IACJC,KAAK;IACLC,KAAK;IACLC,KAAK;IACLC,UAAU;IACVC,WAAW,GAAG,EAAE;IAChBC,QAAQ;IACRC,KAAK;IACLC,QAAQ,GAAG,KAAK;IAChBC,WAAW,GAAG,EAAE;IAChBC,SAAS,GAAG,EAAE;IACdC,GAAG,GAAG,IAAI;IACVC,OAAO,GAAGA,CAAA,KAAM,CAAC,CAAC;IAClBC,SAAS,GAAG;EACd,CAAC,GAAGhB,KAAK;EACT,MAAMiB,OAAO,GAAG,CAAC,EAAEX,KAAK,IAAIF,KAAK,CAAC;EAClC,MAAMc,KAAK,GAAG,CAAC,CAACC,OAAO,CAACb,KAAK,IAAI,CAACF,KAAK,CAAC;EAExCV,SAAS,CAAC,MAAM;IACd,MAAM0B,WAAW,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,CAAC;IACtDF,WAAW,CAACG,OAAO,CAAEC,KAAK,IAAK;MAC7BA,KAAK,CAACC,YAAY,CAAC,cAAc,EAAE,KAAK,CAAC;IAC3C,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7B,OAAA,CAAAE,SAAA;IAAA4B,QAAA,eACE9B,OAAA;MAAKiB,SAAS,EAAC,UAAU;MAAAa,QAAA,gBACvB9B,OAAA;QAAA8B,QAAA,GAAO,GAAC,EAACrB,KAAK,EAAC,GAAC;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBlC,OAAA;QAAA8B,QAAA,eACE9B,OAAA;UACEe,QAAQ,EAAEA,QAAS;UACnBoB,YAAY,EAAC,KAAK;UAClB5B,IAAI,EAAEA,IAAK;UACXD,IAAI,EAAEA,IAAK;UACX8B,EAAE,EAAE7B,IAAK;UACTU,SAAS,EAAE,cAAc,GAAGA,SAAU;UACtCD,WAAW,EAAEA,WAAY;UACzBH,QAAQ,EAAEA,QAAS;UACnBC,KAAK,EAAEA,KAAM;UACbI,GAAG,EAAEA,GAAI;UACTE,SAAS,EAAEA,SAAU;UACrBD,OAAO,EAAEA;QAAQ;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EACL1B,KAAK,iBACJR,OAAA;QAAGiB,SAAS,EAAEL,WAAW,GAAG,kBAAmB;QAAAkB,QAAA,EAC5CtB;MAAK;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACN,CAAC;AAEP,CAAC;AAAC7B,EAAA,CAxDWF,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}