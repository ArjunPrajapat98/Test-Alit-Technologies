{"ast":null,"code":"// import React, { useEffect, useState } from 'react'\n// import CommonButton from '../../common/CommonButton'\n// import { getBillList } from '../../../services/billServies';\n\n// export default function Bill() {\n\n//   const [billList, setBillList] = useState([])\n\n//   const getBillData = async () => {\n//     const response = await getBillList();\n//     setBillList(response);\n//   }\n\n//   useEffect(() => {\n//     getBillData()\n//   }, [])\n\n//   return (\n//     <div className='container'>\n//       <div className=\"common_flex p-3\">\n//         <p className='bill_heading'> Bill </p>\n//         <div className='flex-gap'>\n//           <CommonButton name=\"Add\" />\n//           <CommonButton name=\"Print\" />\n//           <CommonButton name=\"Close\" />\n//         </div>\n//       </div>\n\n//       <table class=\"table table-hover table-bordered\">\n//         <thead>\n//           <tr>\n//             <th scope=\"col\">Sr. No.</th>\n//             <th scope=\"col\">Bill No</th>\n//             <th scope=\"col\">Date</th>\n//             <th scope=\"col\">Customer Name</th>\n//             <th scope=\"col\">Net Amount</th>\n//             <th scope=\"col\">Remarks</th>\n//             <th scope=\"col\">Action</th>\n//           </tr>\n//         </thead>\n//         {\n//           billList?.length > 0 ? (\n//             billList?.map((el, ind) => {\n//               return (\n//                 <tbody>\n//                   <tr>\n//                     <th scope=\"row\">{ind + 1}</th>\n//                     <td>{el?.billNo}</td>\n//                     <td>{new Date(el?.billDate).toDateString()}</td>\n//                     <td>{el?.customerName}</td>\n//                     <td>{(el?.netAmount).toFixed(2)}</td>\n//                     <td>{el?.remarks ? el?.remarks : '-'}</td>\n//                     <td>\n//                       <span className='questions_create'> <i class='bx bx-edit-alt'></i> </span> &nbsp;\n//                       <span className='questions_delete'> <i class='bx bxs-trash'></i> </span>\n//                     </td>\n//                   </tr>\n//                 </tbody>\n//               )\n//             })\n//           ) : (\n//             <> No data found </>\n//           )\n//         }\n//       </table>\n\n//       <InputModal\n//         isOpen={Boolean(isOpen)}\n//         headerName={isEdit ? \"Edit Customer\" : \"Add Customer\"}\n//         toggle={() => closeModal()}\n//         submitLabel={isEdit ? \"Update Customer\" : \"Add Customer\"}\n//         onSubmit={(e) => onSubmit(e)}\n//         disabled={isEdit ? JSON.stringify(formValue) === JSON.stringify(disableInp) : \"\"}\n//         loading={loading}\n//         inputProps={\n//           <>\n//             <div className=\"row\">\n//               <div className=\"col-md-12\">\n//                 <label className=\"modal_label mb-2\"> {<span> Employee <span className=\"redStar_color\"> * </span></span>}</label>\n//                 <InputField\n//                   label=\"User Name *\"\n//                   placeholder=\"User Name\"\n//                   name='UserName'\n//                   type='text'\n//                   value={formValue?.UserName}\n//                   focus={!!(typeof formError === \"object\" && formError?.UserName)}\n//                   error={!!(typeof formError === \"object\") ? formError?.UserName : \"\"}\n//                   onChange={({ target: { name, value } }) =>\n//                     handleOnChange(name, value)\n//                   }\n//                 />\n//               </div>\n//             </div>\n//           </>\n//         }\n//       />\n//     </div>\n//   )\n// }","map":{"version":3,"names":[],"sources":["/home/abc/Documents/alit-task/my-app/src/App/components/Pages/Bill/Bill.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\n// import CommonButton from '../../common/CommonButton'\n// import { getBillList } from '../../../services/billServies';\n\n// export default function Bill() {\n\n//   const [billList, setBillList] = useState([])\n\n//   const getBillData = async () => {\n//     const response = await getBillList();\n//     setBillList(response);\n//   }\n\n//   useEffect(() => {\n//     getBillData()\n//   }, [])\n\n//   return (\n//     <div className='container'>\n//       <div className=\"common_flex p-3\">\n//         <p className='bill_heading'> Bill </p>\n//         <div className='flex-gap'>\n//           <CommonButton name=\"Add\" />\n//           <CommonButton name=\"Print\" />\n//           <CommonButton name=\"Close\" />\n//         </div>\n//       </div>\n\n//       <table class=\"table table-hover table-bordered\">\n//         <thead>\n//           <tr>\n//             <th scope=\"col\">Sr. No.</th>\n//             <th scope=\"col\">Bill No</th>\n//             <th scope=\"col\">Date</th>\n//             <th scope=\"col\">Customer Name</th>\n//             <th scope=\"col\">Net Amount</th>\n//             <th scope=\"col\">Remarks</th>\n//             <th scope=\"col\">Action</th>\n//           </tr>\n//         </thead>\n//         {\n//           billList?.length > 0 ? (\n//             billList?.map((el, ind) => {\n//               return (\n//                 <tbody>\n//                   <tr>\n//                     <th scope=\"row\">{ind + 1}</th>\n//                     <td>{el?.billNo}</td>\n//                     <td>{new Date(el?.billDate).toDateString()}</td>\n//                     <td>{el?.customerName}</td>\n//                     <td>{(el?.netAmount).toFixed(2)}</td>\n//                     <td>{el?.remarks ? el?.remarks : '-'}</td>\n//                     <td>\n//                       <span className='questions_create'> <i class='bx bx-edit-alt'></i> </span> &nbsp;\n//                       <span className='questions_delete'> <i class='bx bxs-trash'></i> </span>\n//                     </td>\n//                   </tr>\n//                 </tbody>\n//               )\n//             })\n//           ) : (\n//             <> No data found </>\n//           )\n//         }\n//       </table>\n\n//       <InputModal\n//         isOpen={Boolean(isOpen)}\n//         headerName={isEdit ? \"Edit Customer\" : \"Add Customer\"}\n//         toggle={() => closeModal()}\n//         submitLabel={isEdit ? \"Update Customer\" : \"Add Customer\"}\n//         onSubmit={(e) => onSubmit(e)}\n//         disabled={isEdit ? JSON.stringify(formValue) === JSON.stringify(disableInp) : \"\"}\n//         loading={loading}\n//         inputProps={\n//           <>\n//             <div className=\"row\">\n//               <div className=\"col-md-12\">\n//                 <label className=\"modal_label mb-2\"> {<span> Employee <span className=\"redStar_color\"> * </span></span>}</label>\n//                 <InputField\n//                   label=\"User Name *\"\n//                   placeholder=\"User Name\"\n//                   name='UserName'\n//                   type='text'\n//                   value={formValue?.UserName}\n//                   focus={!!(typeof formError === \"object\" && formError?.UserName)}\n//                   error={!!(typeof formError === \"object\") ? formError?.UserName : \"\"}\n//                   onChange={({ target: { name, value } }) =>\n//                     handleOnChange(name, value)\n//                   }\n//                 />\n//               </div>\n//             </div>\n//           </>\n//         }\n//       />\n//     </div>\n//   )\n// }\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}